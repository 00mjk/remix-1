{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "route-module:/Users/kentcdodds/code/remix/examples/infinite-scroll/app/root.tsx", "route-module:/Users/kentcdodds/code/remix/examples/infinite-scroll/app/routes/advanced.tsx", "../app/utils/backend.server.ts", "route-module:/Users/kentcdodds/code/remix/examples/infinite-scroll/app/routes/simple.tsx", "route-module:/Users/kentcdodds/code/remix/examples/infinite-scroll/app/routes/index.tsx"],
  "sourcesContent": ["\nimport * as entryServer from \"/Users/kentcdodds/code/remix/examples/infinite-scroll/app/entry.server.tsx\";\nimport * as route0 from \"/Users/kentcdodds/code/remix/examples/infinite-scroll/app/root.tsx\";\nimport * as route1 from \"/Users/kentcdodds/code/remix/examples/infinite-scroll/app/routes/advanced.tsx\";\nimport * as route2 from \"/Users/kentcdodds/code/remix/examples/infinite-scroll/app/routes/simple.tsx\";\nimport * as route3 from \"/Users/kentcdodds/code/remix/examples/infinite-scroll/app/routes/index.tsx\";\nexport { default as assets } from \"./assets.json\";\nexport const entry = { module: entryServer };\nexport const routes = {\n  \"root\": {\n    id: \"root\",\n    parentId: undefined,\n    path: \"\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route0\n  },\n  \"routes/advanced\": {\n    id: \"routes/advanced\",\n    parentId: \"root\",\n    path: \"advanced\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route1\n  },\n  \"routes/simple\": {\n    id: \"routes/simple\",\n    parentId: \"root\",\n    path: \"simple\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route2\n  },\n  \"routes/index\": {\n    id: \"routes/index\",\n    parentId: \"root\",\n    path: undefined,\n    index: true,\n    caseSensitive: undefined,\n    module: route3\n  }\n};", "import * as React from \"react\";\nexport { React };\n", "import { renderToString } from \"react-dom/server\";\nimport { RemixServer } from \"remix\";\nimport type { EntryContext } from \"remix\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"remix\";\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        <Meta />\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        {process.env.NODE_ENV === \"development\" && <LiveReload />}\n      </body>\n    </html>\n  );\n}\n", "import * as React from \"react\";\nimport { useVirtual } from \"react-virtual\";\nimport type { LoaderFunction, LinksFunction } from \"remix\";\nimport { useBeforeUnload } from \"remix\";\nimport { json, useLoaderData, useSearchParams, useTransition } from \"remix\";\nimport stylesUrl from \"~/styles/index.css\";\nimport { countItems, getItems } from \"~/utils/backend.server\";\n\nexport const links: LinksFunction = () => {\n  return [{ rel: \"stylesheet\", href: stylesUrl }];\n};\n\nconst LIMIT = 200;\nconst DATA_OVERSCAN = 40;\n\nconst getStartLimit = (searchParams: URLSearchParams) => ({\n  start: Number(searchParams.get(\"start\") || \"0\"),\n  limit: Number(searchParams.get(\"limit\") || LIMIT.toString())\n});\n\ntype LoaderData = {\n  items: Array<{ id: string; value: string }>;\n  totalItems: number;\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const { start, limit } = getStartLimit(new URL(request.url).searchParams);\n  const data: LoaderData = {\n    items: await getItems({ start, limit }),\n    totalItems: await countItems()\n  };\n  return json(data, {\n    headers: {\n      \"Cache-Control\": \"public, max-age=120\"\n    }\n  });\n};\n\nconst isServerRender = typeof document === \"undefined\";\nconst useSSRLayoutEffect = isServerRender ? () => {} : React.useLayoutEffect;\n\nfunction useIsHydrating(queryString: string) {\n  const [isHydrating] = React.useState(\n    () => !isServerRender && Boolean(document.querySelector(queryString))\n  );\n  return isHydrating;\n}\n\nexport default function Index() {\n  const data = useLoaderData<LoaderData>();\n  const transition = useTransition();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const hydrating = useIsHydrating(\"[data-hydrating-signal]\");\n\n  const { start, limit } = getStartLimit(searchParams);\n  const [initialStart] = React.useState(() => start);\n  const isMountedRef = React.useRef(false);\n\n  const parentRef = React.useRef<HTMLDivElement>(null);\n\n  const rowVirtualizer = useVirtual({\n    size: data.totalItems,\n    parentRef,\n    estimateSize: React.useCallback(() => 35, []),\n    initialRect: { width: 0, height: 800 }\n  });\n\n  useBeforeUnload(\n    React.useCallback(() => {\n      if (!parentRef.current) return;\n      sessionStorage.setItem(\n        \"infiniteScrollTop\",\n        parentRef.current.scrollTop.toString()\n      );\n    }, [])\n  );\n\n  useSSRLayoutEffect(() => {\n    if (!hydrating) return;\n    if (!parentRef.current) return;\n\n    const inifiniteScrollTop = sessionStorage.getItem(\"infiniteScrollTop\");\n    if (!inifiniteScrollTop) return;\n\n    parentRef.current.scrollTop = Number(inifiniteScrollTop);\n\n    return () => {\n      sessionStorage.removeItem(\"infiniteScrollTop\");\n    };\n  }, [initialStart, hydrating]);\n\n  const lowerBoundary = start + DATA_OVERSCAN;\n  const upperBoundary = start + limit - DATA_OVERSCAN;\n  const middleCount = Math.ceil(limit / 2);\n  const firstVirtualItem = rowVirtualizer.virtualItems.at(0);\n  const lastVirtualItem = rowVirtualizer.virtualItems.at(-1);\n  if (!firstVirtualItem || !lastVirtualItem) {\n    throw new Error(\"this should never happen\");\n  }\n\n  let neededStart = start;\n\n  if (firstVirtualItem.index < lowerBoundary) {\n    // user is scrolling up. Move the window up\n    neededStart =\n      Math.floor((firstVirtualItem.index - middleCount) / DATA_OVERSCAN) *\n      DATA_OVERSCAN;\n  } else if (lastVirtualItem.index > upperBoundary) {\n    // user is scrolling down. Move the window down\n    neededStart =\n      Math.ceil((lastVirtualItem.index - middleCount) / DATA_OVERSCAN) *\n      DATA_OVERSCAN;\n  }\n\n  // can't go below 0\n  if (neededStart < 0) {\n    neededStart = 0;\n  }\n\n  // can't go above our data\n  if (neededStart + limit > data.totalItems) {\n    neededStart = data.totalItems - limit;\n  }\n\n  React.useEffect(() => {\n    if (!isMountedRef.current) {\n      return;\n    }\n    if (neededStart !== start) {\n      setSearchParams({\n        start: String(neededStart),\n        limit: LIMIT.toString()\n      });\n    }\n  }, [start, neededStart, setSearchParams]);\n\n  React.useEffect(() => {\n    isMountedRef.current = true;\n  }, []);\n\n  return (\n    <div>\n      <h1>Infinite Scroll</h1>\n      <div\n        ref={parentRef}\n        data-hydrating-signal\n        className=\"List\"\n        style={{\n          height: `800px`,\n          width: `100%`,\n          overflow: \"auto\"\n        }}\n      >\n        <div\n          style={{\n            height: `${rowVirtualizer.totalSize}px`,\n            width: \"100%\",\n            position: \"relative\"\n          }}\n        >\n          {rowVirtualizer.virtualItems.map(virtualRow => {\n            const index = isMountedRef.current\n              ? Math.abs(start - virtualRow.index)\n              : virtualRow.index;\n            const item = data.items[index];\n\n            return (\n              <div\n                key={virtualRow.key}\n                className={\n                  virtualRow.index % 2 ? \"ListItemOdd\" : \"ListItemEven\"\n                }\n                style={{\n                  position: \"absolute\",\n                  top: 0,\n                  left: 0,\n                  width: \"100%\",\n                  height: `${virtualRow.size}px`,\n                  transform: `translateY(${virtualRow.start}px)`\n                }}\n              >\n                {index + start}{\" \"}\n                {item\n                  ? item.value\n                  : transition.state === \"loading\"\n                  ? \"Loading more...\"\n                  : \"Nothing to see here...\"}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n", "let items = (global.__items =\n  global.__items ??\n  Array.from({ length: 50_000 }, (_, i) => ({\n    id: i.toString(),\n    value: `Item ${i}`,\n  })));\n\nexport async function getItems({\n  start,\n  limit,\n}: {\n  start: number;\n  limit: number;\n}) {\n  return items.slice(start, start + limit);\n}\n\nexport async function countItems() {\n  return items.length;\n}\n", "import * as React from \"react\";\nimport { useVirtual } from \"react-virtual\";\nimport type { LoaderFunction, LinksFunction } from \"remix\";\nimport { useFetcher } from \"remix\";\nimport { json, useLoaderData, useTransition } from \"remix\";\nimport stylesUrl from \"~/styles/index.css\";\nimport { countItems, getItems } from \"~/utils/backend.server\";\n\nexport const links: LinksFunction = () => {\n  return [{ rel: \"stylesheet\", href: stylesUrl }];\n};\n\nconst LIMIT = 200;\nconst DATA_OVERSCAN = 40;\n\nconst getStartLimit = (searchParams: URLSearchParams) => ({\n  start: Number(searchParams.get(\"start\") || \"0\"),\n  limit: Number(searchParams.get(\"limit\") || LIMIT.toString())\n});\n\ntype LoaderData = {\n  items: Array<{ id: string; value: string }>;\n  totalItems: number;\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const { start, limit } = getStartLimit(new URL(request.url).searchParams);\n  const data: LoaderData = {\n    items: await getItems({ start, limit }),\n    totalItems: await countItems()\n  };\n  return json(data, {\n    headers: {\n      \"Cache-Control\": \"public, max-age=120\"\n    }\n  });\n};\n\nexport default function Index() {\n  const data = useLoaderData<LoaderData>();\n  const [items, setItems] = React.useState(data.items);\n  const transition = useTransition();\n  const fetcher = useFetcher();\n  const startRef = React.useRef(0);\n\n  const parentRef = React.useRef<HTMLDivElement>(null);\n\n  const rowVirtualizer = useVirtual({\n    size: data.totalItems,\n    parentRef,\n    estimateSize: React.useCallback(() => 35, []),\n    initialRect: { width: 0, height: 800 }\n  });\n  const lastVirtualItem = rowVirtualizer.virtualItems.at(-1);\n  if (!lastVirtualItem) {\n    throw new Error(\"this should never happen\");\n  }\n\n  let newStart = startRef.current;\n\n  const upperBoundary = startRef.current + LIMIT - DATA_OVERSCAN;\n\n  if (lastVirtualItem.index > upperBoundary) {\n    // user is scrolling down. Move the window down\n    newStart = startRef.current + LIMIT;\n  }\n\n  React.useEffect(() => {\n    if (newStart === startRef.current) return;\n\n    const qs = new URLSearchParams([\n      [\"start\", String(newStart)],\n      [\"limit\", String(LIMIT)]\n    ]);\n    fetcher.load(`/simple?${qs}`);\n    startRef.current = newStart;\n  }, [newStart, fetcher]);\n\n  React.useEffect(() => {\n    if (fetcher.data) {\n      setItems(prevItems => [...prevItems, ...fetcher.data.items]);\n    }\n  }, [fetcher.data]);\n\n  return (\n    <div>\n      <h1>Infinite Scroll</h1>\n      <div\n        ref={parentRef}\n        className=\"List\"\n        style={{\n          height: `800px`,\n          width: `100%`,\n          overflow: \"auto\"\n        }}\n      >\n        <div\n          style={{\n            height: `${rowVirtualizer.totalSize}px`,\n            width: \"100%\",\n            position: \"relative\"\n          }}\n        >\n          {rowVirtualizer.virtualItems.map(virtualRow => {\n            const item = items[virtualRow.index];\n\n            return (\n              <div\n                key={virtualRow.key}\n                className={\n                  virtualRow.index % 2 ? \"ListItemOdd\" : \"ListItemEven\"\n                }\n                style={{\n                  position: \"absolute\",\n                  top: 0,\n                  left: 0,\n                  width: \"100%\",\n                  height: `${virtualRow.size}px`,\n                  transform: `translateY(${virtualRow.start}px)`\n                }}\n              >\n                {virtualRow.index}{\" \"}\n                {item\n                  ? item.value\n                  : transition.state === \"loading\"\n                  ? \"Loading more...\"\n                  : \"Nothing to see here...\"}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import { Link } from \"remix\";\n\nexport default function IndexRoute() {\n  return (\n    <div>\n      <h1>Infinite Scroll Demo</h1>\n      <p>\n        There are two demos here. The first shows how to do this in a simple way\n        that's pretty standard for this type of user experience you have around\n        the web. The second is a bit more advanced but a much better user\n        experience. Pick your preferred method.\n      </p>\n      <ul>\n        <li>\n          <Link to=\"/simple\">Simple</Link>\n        </li>\n        <li>\n          <Link to=\"/advanced\">Advanced</Link>\n        </li>\n      </ul>\n    </div>\n  );\n}\n"],
  "mappings": "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",
  "names": []
}

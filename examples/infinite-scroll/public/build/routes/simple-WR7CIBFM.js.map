{
  "version": 3,
  "sources": ["browser-route-module:/Users/kentcdodds/code/remix/examples/infinite-scroll/app/routes/simple.tsx?browser", "../../../app/routes/simple.tsx"],
  "sourcesContent": ["export { default, links } from \"/Users/kentcdodds/code/remix/examples/infinite-scroll/app/routes/simple.tsx\";", "import * as React from \"react\";\nimport { useVirtual } from \"react-virtual\";\nimport type { LoaderFunction, LinksFunction } from \"remix\";\nimport { useFetcher } from \"remix\";\nimport { json, useLoaderData, useTransition } from \"remix\";\nimport stylesUrl from \"~/styles/index.css\";\nimport { countItems, getItems } from \"~/utils/backend.server\";\n\nexport const links: LinksFunction = () => {\n  return [{ rel: \"stylesheet\", href: stylesUrl }];\n};\n\nconst LIMIT = 200;\nconst DATA_OVERSCAN = 40;\n\nconst getStartLimit = (searchParams: URLSearchParams) => ({\n  start: Number(searchParams.get(\"start\") || \"0\"),\n  limit: Number(searchParams.get(\"limit\") || LIMIT.toString())\n});\n\ntype LoaderData = {\n  items: Array<{ id: string; value: string }>;\n  totalItems: number;\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const { start, limit } = getStartLimit(new URL(request.url).searchParams);\n  const data: LoaderData = {\n    items: await getItems({ start, limit }),\n    totalItems: await countItems()\n  };\n  return json(data, {\n    headers: {\n      \"Cache-Control\": \"public, max-age=120\"\n    }\n  });\n};\n\nexport default function Index() {\n  const data = useLoaderData<LoaderData>();\n  const [items, setItems] = React.useState(data.items);\n  const transition = useTransition();\n  const fetcher = useFetcher();\n  const startRef = React.useRef(0);\n\n  const parentRef = React.useRef<HTMLDivElement>(null);\n\n  const rowVirtualizer = useVirtual({\n    size: data.totalItems,\n    parentRef,\n    estimateSize: React.useCallback(() => 35, []),\n    initialRect: { width: 0, height: 800 }\n  });\n  const lastVirtualItem = rowVirtualizer.virtualItems.at(-1);\n  if (!lastVirtualItem) {\n    throw new Error(\"this should never happen\");\n  }\n\n  let newStart = startRef.current;\n\n  const upperBoundary = startRef.current + LIMIT - DATA_OVERSCAN;\n\n  if (lastVirtualItem.index > upperBoundary) {\n    // user is scrolling down. Move the window down\n    newStart = startRef.current + LIMIT;\n  }\n\n  React.useEffect(() => {\n    if (newStart === startRef.current) return;\n\n    const qs = new URLSearchParams([\n      [\"start\", String(newStart)],\n      [\"limit\", String(LIMIT)]\n    ]);\n    fetcher.load(`/simple?${qs}`);\n    startRef.current = newStart;\n  }, [newStart, fetcher]);\n\n  React.useEffect(() => {\n    if (fetcher.data) {\n      setItems(prevItems => [...prevItems, ...fetcher.data.items]);\n    }\n  }, [fetcher.data]);\n\n  return (\n    <div>\n      <h1>Infinite Scroll</h1>\n      <div\n        ref={parentRef}\n        className=\"List\"\n        style={{\n          height: `800px`,\n          width: `100%`,\n          overflow: \"auto\"\n        }}\n      >\n        <div\n          style={{\n            height: `${rowVirtualizer.totalSize}px`,\n            width: \"100%\",\n            position: \"relative\"\n          }}\n        >\n          {rowVirtualizer.virtualItems.map(virtualRow => {\n            const item = items[virtualRow.index];\n\n            return (\n              <div\n                key={virtualRow.key}\n                className={\n                  virtualRow.index % 2 ? \"ListItemOdd\" : \"ListItemEven\"\n                }\n                style={{\n                  position: \"absolute\",\n                  top: 0,\n                  left: 0,\n                  width: \"100%\",\n                  height: `${virtualRow.size}px`,\n                  transform: `translateY(${virtualRow.start}px)`\n                }}\n              >\n                {virtualRow.index}{\" \"}\n                {item\n                  ? item.value\n                  : transition.state === \"loading\"\n                  ? \"Loading more...\"\n                  : \"Nothing to see here...\"}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;AAAA;;;ACAA;AAAA,YAAuB;AAMvB,qBAAqC;AAE9B,IAAM,QAAuB,MAAM;AACxC,SAAO,CAAC,EAAE,KAAK,cAAc,MAAM;AAAA;AAGrC,IAAM,QAAQ;AACd,IAAM,gBAAgB;AAyBP,iBAAiB;AAC9B,QAAM,OAAO;AACb,QAAM,CAAC,OAAO,YAAY,AAAM,eAAS,KAAK;AAC9C,QAAM,aAAa;AACnB,QAAM,UAAU;AAChB,QAAM,WAAW,AAAM,aAAO;AAE9B,QAAM,YAAY,AAAM,aAAuB;AAE/C,QAAM,iBAAiB,WAAW;AAAA,IAChC,MAAM,KAAK;AAAA,IACX;AAAA,IACA,cAAc,AAAM,kBAAY,MAAM,IAAI;AAAA,IAC1C,aAAa,EAAE,OAAO,GAAG,QAAQ;AAAA;AAEnC,QAAM,kBAAkB,eAAe,aAAa,GAAG;AACvD,MAAI,CAAC,iBAAiB;AACpB,UAAM,IAAI,MAAM;AAAA;AAGlB,MAAI,WAAW,SAAS;AAExB,QAAM,gBAAgB,SAAS,UAAU,QAAQ;AAEjD,MAAI,gBAAgB,QAAQ,eAAe;AAEzC,eAAW,SAAS,UAAU;AAAA;AAGhC,EAAM,gBAAU,MAAM;AACpB,QAAI,aAAa,SAAS;AAAS;AAEnC,UAAM,KAAK,IAAI,gBAAgB;AAAA,MAC7B,CAAC,SAAS,OAAO;AAAA,MACjB,CAAC,SAAS,OAAO;AAAA;AAEnB,YAAQ,KAAK,WAAW;AACxB,aAAS,UAAU;AAAA,KAClB,CAAC,UAAU;AAEd,EAAM,gBAAU,MAAM;AACpB,QAAI,QAAQ,MAAM;AAChB,eAAS,eAAa,CAAC,GAAG,WAAW,GAAG,QAAQ,KAAK;AAAA;AAAA,KAEtD,CAAC,QAAQ;AAEZ,SACE,oCAAC,OAAD,MACE,oCAAC,MAAD,MAAI,oBACJ,oCAAC,OAAD;AAAA,IACE,KAAK;AAAA,IACL,WAAU;AAAA,IACV,OAAO;AAAA,MACL,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,UAAU;AAAA;AAAA,KAGZ,oCAAC,OAAD;AAAA,IACE,OAAO;AAAA,MACL,QAAQ,GAAG,eAAe;AAAA,MAC1B,OAAO;AAAA,MACP,UAAU;AAAA;AAAA,KAGX,eAAe,aAAa,IAAI,gBAAc;AAC7C,UAAM,OAAO,MAAM,WAAW;AAE9B,WACE,oCAAC,OAAD;AAAA,MACE,KAAK,WAAW;AAAA,MAChB,WACE,WAAW,QAAQ,IAAI,gBAAgB;AAAA,MAEzC,OAAO;AAAA,QACL,UAAU;AAAA,QACV,KAAK;AAAA,QACL,MAAM;AAAA,QACN,OAAO;AAAA,QACP,QAAQ,GAAG,WAAW;AAAA,QACtB,WAAW,cAAc,WAAW;AAAA;AAAA,OAGrC,WAAW,OAAO,KAClB,OACG,KAAK,QACL,WAAW,UAAU,YACrB,oBACA;AAAA;AAAA;",
  "names": []
}
